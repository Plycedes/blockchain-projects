{
  "address": "0xfF83c3D34308c9AcC2F3a11257E8903373288cB8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x748d73961b844a781e35ded548202fcfd96392ea1ca7c0f6d7a7af5cfbd75e5d",
  "receipt": {
    "to": null,
    "from": "0xF416A40EdF205c563E7B12Fdd3a21710c55CfDA3",
    "contractAddress": "0xfF83c3D34308c9AcC2F3a11257E8903373288cB8",
    "transactionIndex": 45,
    "gasUsed": "828040",
    "logsBloom": "0x
    "blockHash": "0xbed026e5f4f3dec1fd2bcf8da667ff88ad117a3406807b68c6d709b629978f98",
    "transactionHash": "0x748d73961b844a781e35ded548202fcfd96392ea1ca7c0f6d7a7af5cfbd75e5d",
    "logs": [],
    "blockNumber": 3752777,
    "cumulativeGasUsed": "11907461",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "1aee0551c037df030c97632c0626966f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NovoFund.sol\":\"NovoFund\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/NovoFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract NovoFund{\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    uint256 public constant minUSD = 50 * 1e18;\\r\\n\\r\\n    address public immutable owner;\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n    \\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress){\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    function fund() public payable{\\r\\n        require(msg.value.getConversionRate(priceFeed) >= minUSD, \\\"Didn't send enough\\\");\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public ownerSigil{        \\r\\n        for(uint256 index = 0; index < funders.length; index++){\\r\\n            address funder = funders[index];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n    \\r\\n    modifier ownerSigil{\\r\\n        //require(msg.sender == owner, \\\"Sender is not owner\\\");\\r\\n        if(msg.sender != owner) { revert NotOwner(); }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    receive() payable external{\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() payable external{\\r\\n        fund();\\r\\n    }\\r\\n}\",\"keccak256\":\"0x9da1531d3a61e6e9a1f433d1fa7ef91600440a09e658892b674904f610b7668a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter{\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        //address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        //AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\r\\n        (, int256 price,,,) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }    \\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount)/1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x7fbf937317c5167955847c5bf99d19a909406fcecff96fb6537c52b89ed27cae\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ef6380380610ef683398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d9761015f600039600081816102e601526105640152610d976000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063dc0d3dff14610141578063dc992aa01461017e57610083565b80633ccfd60b1461008d5780633e47d6f3146100a4578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a9565b610524565b6040516100d891906107ef565b60405180910390f35b3480156100ed57600080fd5b506100f661053c565b6040516101039190610869565b60405180910390f35b34801561011857600080fd5b50610121610562565b60405161012e9190610893565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906108da565b610586565b6040516101759190610893565b60405180910390f35b34801561018a57600080fd5b506101936105c5565b6040516101a091906107ef565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d290919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610964565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109b3565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041457600080828154811061038e5761038d6109e7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040c90610a16565b91505061036c565b50600067ffffffffffffffff8111156104305761042f610a5e565b5b60405190808252806020026020018201604052801561045e5781602001602082028036833780820191505090505b506000908051906020019061047492919061069f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049b90610abe565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b5050905080610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890610b1f565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000806105de8361060e565b90506000670de0b6b3a764000085836105f79190610b3f565b6106019190610bb0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561065c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106809190610c6e565b5050509150506402540be400816106979190610ce9565b915050919050565b828054828255906000526020600020908101928215610718579160200282015b828111156107175782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bf565b5b5090506107259190610729565b5090565b5b8082111561074257600081600090555060010161072a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107768261074b565b9050919050565b6107868161076b565b811461079157600080fd5b50565b6000813590506107a38161077d565b92915050565b6000602082840312156107bf576107be610746565b5b60006107cd84828501610794565b91505092915050565b6000819050919050565b6107e9816107d6565b82525050565b600060208201905061080460008301846107e0565b92915050565b6000819050919050565b600061082f61082a6108258461074b565b61080a565b61074b565b9050919050565b600061084182610814565b9050919050565b600061085382610836565b9050919050565b61086381610848565b82525050565b600060208201905061087e600083018461085a565b92915050565b61088d8161076b565b82525050565b60006020820190506108a86000830184610884565b92915050565b6108b7816107d6565b81146108c257600080fd5b50565b6000813590506108d4816108ae565b92915050565b6000602082840312156108f0576108ef610746565b5b60006108fe848285016108c5565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061094e601283610907565b915061095982610918565b602082019050919050565b6000602082019050818103600083015261097d81610941565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109be826107d6565b91506109c9836107d6565b92508282019050808211156109e1576109e0610984565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a21826107d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5357610a52610984565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa8600083610a8d565b9150610ab382610a98565b600082019050919050565b6000610ac982610a9b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b09600b83610907565b9150610b1482610ad3565b602082019050919050565b60006020820190508181036000830152610b3881610afc565b9050919050565b6000610b4a826107d6565b9150610b55836107d6565b9250828202610b63816107d6565b91508282048414831517610b7a57610b79610984565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bbb826107d6565b9150610bc6836107d6565b925082610bd657610bd5610b81565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0081610be1565b8114610c0b57600080fd5b50565b600081519050610c1d81610bf7565b92915050565b6000819050919050565b610c3681610c23565b8114610c4157600080fd5b50565b600081519050610c5381610c2d565b92915050565b600081519050610c68816108ae565b92915050565b600080600080600060a08688031215610c8a57610c89610746565b5b6000610c9888828901610c0e565b9550506020610ca988828901610c44565b9450506040610cba88828901610c59565b9350506060610ccb88828901610c59565b9250506080610cdc88828901610c0e565b9150509295509295909350565b6000610cf482610c23565b9150610cff83610c23565b9250828202610d0d81610c23565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d4557610d44610984565b5b8282058414831517610d5a57610d59610984565b5b509291505056fea26469706673582212209e0ec4812c0dad375d329afb8a0b08219def8be1d4f0eed45d52350a4270c79464736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063dc0d3dff14610141578063dc992aa01461017e57610083565b80633ccfd60b1461008d5780633e47d6f3146100a4578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a9565b610524565b6040516100d891906107ef565b60405180910390f35b3480156100ed57600080fd5b506100f661053c565b6040516101039190610869565b60405180910390f35b34801561011857600080fd5b50610121610562565b60405161012e9190610893565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906108da565b610586565b6040516101759190610893565b60405180910390f35b34801561018a57600080fd5b506101936105c5565b6040516101a091906107ef565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d290919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610964565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109b3565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041457600080828154811061038e5761038d6109e7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040c90610a16565b91505061036c565b50600067ffffffffffffffff8111156104305761042f610a5e565b5b60405190808252806020026020018201604052801561045e5781602001602082028036833780820191505090505b506000908051906020019061047492919061069f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049b90610abe565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b5050905080610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890610b1f565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000806105de8361060e565b90506000670de0b6b3a764000085836105f79190610b3f565b6106019190610bb0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561065c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106809190610c6e565b5050509150506402540be400816106979190610ce9565b915050919050565b828054828255906000526020600020908101928215610718579160200282015b828111156107175782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bf565b5b5090506107259190610729565b5090565b5b8082111561074257600081600090555060010161072a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107768261074b565b9050919050565b6107868161076b565b811461079157600080fd5b50565b6000813590506107a38161077d565b92915050565b6000602082840312156107bf576107be610746565b5b60006107cd84828501610794565b91505092915050565b6000819050919050565b6107e9816107d6565b82525050565b600060208201905061080460008301846107e0565b92915050565b6000819050919050565b600061082f61082a6108258461074b565b61080a565b61074b565b9050919050565b600061084182610814565b9050919050565b600061085382610836565b9050919050565b61086381610848565b82525050565b600060208201905061087e600083018461085a565b92915050565b61088d8161076b565b82525050565b60006020820190506108a86000830184610884565b92915050565b6108b7816107d6565b81146108c257600080fd5b50565b6000813590506108d4816108ae565b92915050565b6000602082840312156108f0576108ef610746565b5b60006108fe848285016108c5565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061094e601283610907565b915061095982610918565b602082019050919050565b6000602082019050818103600083015261097d81610941565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109be826107d6565b91506109c9836107d6565b92508282019050808211156109e1576109e0610984565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a21826107d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5357610a52610984565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa8600083610a8d565b9150610ab382610a98565b600082019050919050565b6000610ac982610a9b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b09600b83610907565b9150610b1482610ad3565b602082019050919050565b60006020820190508181036000830152610b3881610afc565b9050919050565b6000610b4a826107d6565b9150610b55836107d6565b9250828202610b63816107d6565b91508282048414831517610b7a57610b79610984565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bbb826107d6565b9150610bc6836107d6565b925082610bd657610bd5610b81565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0081610be1565b8114610c0b57600080fd5b50565b600081519050610c1d81610bf7565b92915050565b6000819050919050565b610c3681610c23565b8114610c4157600080fd5b50565b600081519050610c5381610c2d565b92915050565b600081519050610c68816108ae565b92915050565b600080600080600060a08688031215610c8a57610c89610746565b5b6000610c9888828901610c0e565b9550506020610ca988828901610c44565b9450506040610cba88828901610c59565b9350506060610ccb88828901610c59565b9250506080610cdc88828901610c0e565b9150509295509295909350565b6000610cf482610c23565b9150610cff83610c23565b9250828202610d0d81610c23565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d4557610d44610984565b5b8282058414831517610d5a57610d59610984565b5b509291505056fea26469706673582212209e0ec4812c0dad375d329afb8a0b08219def8be1d4f0eed45d52350a4270c79464736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/NovoFund.sol:NovoFund",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/NovoFund.sol:NovoFund",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/NovoFund.sol:NovoFund",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}